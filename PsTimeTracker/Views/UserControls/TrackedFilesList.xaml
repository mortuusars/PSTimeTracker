<UserControl x:Class="PSTimeTracker.Views.UserControls.TrackedFilesList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PSTimeTracker.Views.UserControls"
             xmlns:test="clr-namespace:PSTimeTracker.Testing" 
             xmlns:models="clr-namespace:PSTimeTracker.Models" 
             xmlns:sys="clr-namespace:System;assembly=System.Runtime" 
             xmlns:wpf="clr-namespace:PSTimeTracker.WPF" xmlns:Behaviours="http://schemas.microsoft.com/xaml/behaviors"
             x:Name="root"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="240">
    
    <UserControl.Resources>

        <wpf:BindingProxy x:Key="MainDataContext" Data="{Binding}"/>

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource RobotoLight}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
            <Setter Property="Margin" Value="3 0"/>
            <Setter Property="Padding" Value="1 1 1 0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCurrentlyActive}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource ListItemFGSelectedBrush}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, 
                                Path=IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource ListItemFGSelectedBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Item Border -->
        <Style x:Key="ItemBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource MainBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="1.5"/>
            <Setter Property="Margin" Value="0 2"/>

            <Style.Triggers>

                <DataTrigger Binding="{Binding IsCurrentlyActive}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ListItemBGActiveBrush}"/>                    
                    <Setter Property="Padding" Value="0 1"/>                
                </DataTrigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>                        
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0" To="6 2 0 2" Storyboard.TargetProperty="Margin" FillBehavior="HoldEnd" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.1" To="0 2" Storyboard.TargetProperty="Margin" FillBehavior="Stop" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource 
                                    Mode=FindAncestor, AncestorType=ListViewItem}}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ListItemBGSelectedBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ListItemFGSelectedBrush}"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Tag" Value="{Binding ElementName=root}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ContentPresenter>
                            <ContentPresenter.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Merge"
                                              Command="{Binding Data.MergeCommand, 
                                                Source={StaticResource MainDataContext}}"
                                              CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </ContentPresenter.ContextMenu>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Item Template -->
        <DataTemplate x:Key="ItemDataTemplate">
            <Border Style="{StaticResource ItemBorderStyle}">
                
                <Grid Background="{x:Null}" Margin="2 1 2 2" >

                    <Grid.ToolTip>
                        <TextBlock Text="{Binding FileName}" MaxWidth="500" TextWrapping="Wrap" Style="{StaticResource TextBlockDefault}" FontFamily="{StaticResource RobotoLight}"/>
                    </Grid.ToolTip>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition x:Name="TimeColumn" Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                           Text="{Binding FileName}" 
                           HorizontalAlignment="Left"                           
                           Style="{StaticResource TextBlockStyle}">
                        <TextBlock.OpacityMask>
                            <!-- Fade on the right side. Sets position of mask based on width of the main element.-->
                            <LinearGradientBrush MappingMode="Absolute" 
                                                 StartPoint="{Binding ElementName=MainListView, Path=ActualWidth, Converter={StaticResource OpacityPositionConverter}}" 
                                                 EndPoint="{Binding ElementName=MainListView, Path=ActualWidth, Converter={StaticResource OpacityPositionConverter}, ConverterParameter=transparent}">
                                <GradientStop Color="Transparent" Offset="1"/>
                                <GradientStop Color="Black" Offset="0"/>
                            </LinearGradientBrush>
                        </TextBlock.OpacityMask>
                    </TextBlock>

                    <TextBlock Grid.Column="1" x:Name="TimeText"
                               HorizontalAlignment="Right"
                               Text="{Binding TrackedSeconds, Converter={StaticResource SecondsToTimeConverter}}"
                               Style="{StaticResource TextBlockStyle}"/>

                </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>



    <ListView Name="MainListView" Padding="5 3 5 3"
              Background="Transparent"
              BorderThickness="0"
              VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch"
              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
              FocusVisualStyle="{x:Null}"
              ItemsSource="{Binding TrackedFiles}"
              ItemContainerStyle="{StaticResource ListViewItemStyle}"
              ItemTemplate="{StaticResource ItemDataTemplate}">

        <Behaviours:Interaction.Triggers>
            <Behaviours:EventTrigger EventName="SelectionChanged">
                <Behaviours:InvokeCommandAction Command="{Binding Data.SelectionChangedCommand, 
                                                Source={StaticResource MainDataContext}}"/>
            </Behaviours:EventTrigger>
        </Behaviours:Interaction.Triggers>
        
        <d:ListView.ItemsSource>
            <x:Array Type="{x:Type models:TrackedFile}">
                <models:TrackedFile FileName="DSC1239120" TrackedSeconds="241" IsCurrentlyActive="True"/>
                <models:TrackedFile FileName="DSC12391201231981721073" TrackedSeconds="241"/>
                <models:TrackedFile FileName="DSC12391201231981721073" TrackedSeconds="15241"/>
            </x:Array>
        </d:ListView.ItemsSource>
    </ListView>

</UserControl>
