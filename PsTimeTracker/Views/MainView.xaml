<Window x:Class="PSTimeTracker.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PSTimeTracker" 
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:test="clr-namespace:PSTimeTracker.Testing"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        Title="Photoshop Time Tracker"  
        Name="mainWindow"
        Width="300" MinWidth="300"
        Height="1080" MinHeight="200"
        Topmost="{Binding AlwaysOnTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        WindowStyle="None" 
        ResizeMode="NoResize" 
        AllowsTransparency="True"
        Background="{x:Null}"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        d:DataContext="{d:DesignInstance Type=test:MockViewModel, IsDesignTimeCreatable=True}" >

    <Window.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding RemoveItemsCommand}"/>
    </Window.InputBindings>

    <Window.Resources>
        
        <DropShadowEffect x:Key="Shadow" BlurRadius="12" ShadowDepth="3" Direction="-90" Opacity="0.3"/>

        <sys:Double x:Key="ResizeBorderThickness">9</sys:Double>

        <Style x:Key="ResizeBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style x:Key="SideResizeBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ResizeBorder}">
            <Setter Property="Width" Value="{StaticResource ResizeBorderThickness}"/>
        </Style>

        <Style x:Key="BottomResizeBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ResizeBorder}">
            <Setter Property="Height" Value="{StaticResource ResizeBorderThickness}"/>
        </Style>

        <!--#region ScrollBar Style -->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="ScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="ScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="ScrollBarRectangle" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Margin" Value="-20,0,-17,0" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Foreground" Value="#FFA1A1A1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="42"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="ScrollBarThumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ScrollBarThumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="ScrollBarThumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->

        <!-- Gradient -->
        <LinearGradientBrush x:Key="MainGradient" StartPoint="0.5, 0" EndPoint="0.5, 400" 
                             MappingMode="Absolute" ColorInterpolationMode="ScRgbLinearInterpolation">
            <GradientStop Color="{StaticResource GradientTop}" Offset="0"/>
            <GradientStop Color="{StaticResource GradientBottom}" Offset="1"/>
        </LinearGradientBrush>

        <!--#region Header Buttons -->

        <sys:Double x:Key="HeaderButtonsDefaultOpacity">0.25</sys:Double>
        <sys:Double x:Key="HeaderButtonsHoverOpacity">0.9</sys:Double>

        <Storyboard x:Key="ButtonMouseOverAnimation">
            <DoubleAnimation Duration="0:0:0.08" 
                             Storyboard.TargetProperty="Opacity"
                             To="{StaticResource HeaderButtonsHoverOpacity}" />
        </Storyboard>

        <Storyboard x:Key="ButtonMouseLeaveAnimation">
            <DoubleAnimation Duration="0:0:0.35" 
                             Storyboard.TargetProperty="Opacity"
                             To="{StaticResource HeaderButtonsDefaultOpacity}"
                             FillBehavior="Stop"/>
        </Storyboard>

        <Style x:Key="HeaderImageButton" TargetType="Image">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Opacity" Value="{StaticResource HeaderButtonsDefaultOpacity}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ButtonMouseOverAnimation}"/>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ButtonMouseLeaveAnimation}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Menu" TargetType="Image" BasedOn="{StaticResource HeaderImageButton}">
            <Setter Property="Source" Value="/Resources/Images/menu_24.png"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
        </Style>

        <Style x:Key="Pin" TargetType="Image" BasedOn="{StaticResource HeaderImageButton}">
            <Setter Property="Source" Value="/Resources/Images/pin_24.png"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding AlwaysOnTop}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0"
                                                 To="1"
                                                 Storyboard.TargetProperty="Opacity"/>

                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0"
                                                 To="{StaticResource HeaderButtonsDefaultOpacity}"
                                                 Storyboard.TargetProperty="Opacity"/>

                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Minimize" TargetType="Image" BasedOn="{StaticResource HeaderImageButton}">
            <Setter Property="Source" Value="/Resources/Images/minimize_24.png"/>
        </Style>

        <Style x:Key="Close" TargetType="Image" BasedOn="{StaticResource HeaderImageButton}">
            <Setter Property="Source" Value="/Resources/Images/close_24.png"/>
        </Style>

        <!--#endregion-->

        <Style x:Key="HeaderDivider" TargetType="{x:Type Rectangle}">
            <Setter Property="Visibility" Value="Visible"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding FilesList.Count}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MainDimmer" TargetType="{x:Type Rectangle}">
            <Setter Property="Visibility" Value="Collapsed"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding MenuIsOpen}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <!--#region ListView Style -->

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
            <Setter Property="Margin" Value="3 0"/>
            <Setter Property="Padding" Value="1 1.5 1 0"/>
            <Style.Triggers>

                <DataTrigger Binding="{Binding IsCurrentlyActive}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource ListItemFGSelectedBrush}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource ListItemFGSelectedBrush}"/>
                </DataTrigger>

                
                
                
            </Style.Triggers>
        </Style>

        <Style x:Key="ListViewContainer" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource MainGradient}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Visibility" Value="Visible"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding FilesList.Count}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Item Border -->

        <Style x:Key="ItemBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListItemBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1.3"/>
            <Setter Property="CornerRadius" Value="1.5"/>
            <Setter Property="Margin" Value="2 2.5"/>
            <Setter Property="Padding" Value="0"/>

            <Style.Triggers>

                <DataTrigger Binding="{Binding IsCurrentlyActive}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ListItemBGActiveBrush}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="Padding" Value="0 1.5"/>
                </DataTrigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource ListItemBorderMouseOverBrush}"/>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.01" To="6 2.5 2 2.5" Storyboard.TargetProperty="Margin" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.1" To="2 2.5" Storyboard.TargetProperty="Margin" FillBehavior="Stop" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ListItemBGSelectedBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ListItemFGSelectedBrush}"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="ItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <StackPanel Background="Transparent">
                            <ContentPresenter/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Item Template -->
        
        <DataTemplate x:Key="ItemTemplate">
            <Border Style="{StaticResource ItemBorderStyle}">

                <Grid Background="{x:Null}" Margin="2 1 2 2" >

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                           Text="{Binding FileName}" 
                           HorizontalAlignment="Left"
                           
                           Style="{StaticResource TextBlockStyle}"/>

                    <TextBlock Grid.Column="1"
                           HorizontalAlignment="Right"
                           Text="{Binding TrackedSeconds, Converter={StaticResource SecondsToTimeConverter}}"
                           Style="{StaticResource TextBlockStyle}"/>

                </Grid>
            </Border>
        </DataTemplate>
        
        <!--#endregion-->


        <!--#region Menu Style -->

        <Style x:Key="MenuButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="5 0"/>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"/>
            <Setter Property="FontSize" Value="16"/>

        </Style>

        <!--#endregion-->

    </Window.Resources>

    <Grid x:Name="MainContainer">

        <Grid x:Name="MainWindowGrid"
          Margin="15"
          VerticalAlignment="Top"
          Effect="{StaticResource Shadow}">

            <Grid.RowDefinitions>
                <!-- Header -->
                <RowDefinition Height="30"/>
                <!-- Main Region -->
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Border x:Name="MainBorder"
                Margin="-1.2"
                Grid.RowSpan="2"
                BorderBrush="{StaticResource MainBorderBrush}"
                    CornerRadius="1.5"
                BorderThickness="1.2"/>


            <!--#region Header -->

            <Grid Name="HeaderContainer" 
                  Grid.Row="0"
                  Background="{StaticResource HeaderBackgroundBrush}"
                  MouseLeftButtonDown="HeaderContainer_MouseLeftButtonDown">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                </Grid.ColumnDefinitions>

                <Rectangle Name="MainHeaderDivider"
                           Grid.ColumnSpan="3"
                           Fill="{StaticResource HeaderBorderBrush}" 
                           Height="1" 
                           Margin="0 0"
                           d:Visibility="Visible"
                           VerticalAlignment="Bottom"
                           Style="{StaticResource HeaderDivider}">
                </Rectangle>

                <TextBlock Name="WindowTitle" 
                           Grid.Column="1"
                           Margin="4 0 0 0"
                           HorizontalAlignment="Left" 
                           VerticalAlignment="Center"
                           FontFamily="{StaticResource MontserratRegular}"
                           FontSize="17" 
                           Foreground="{StaticResource MainForegroundBrush}"
                           Text="{Binding ItemsInfo}" d:Text="Info or title"/>

                <Image Style="{StaticResource Menu}"
                           Margin="4 0 0 0">
                    <Image.InputBindings>
                        <MouseBinding Gesture="LeftClick" Command="{Binding MenuCommand}"/>
                    </Image.InputBindings>
                </Image>


                <StackPanel Name="RightHeaderButtonsContainer" 
                            Grid.Column="2"
                            Orientation="Horizontal" 
                            HorizontalAlignment="Right">
                    
                    <Image Style="{StaticResource Minimize}"
                           Margin="5 0 8 0" >
                        <Image.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding SortListCommand}"/>
                        </Image.InputBindings>
                    </Image>

                    <Image Style="{StaticResource Minimize}"
                           Margin="0 0 5 0">
                        <Image.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding MinimizeWindowCommand}"/>
                        </Image.InputBindings>
                    </Image>
                    <Image Style="{StaticResource Close}"
                           Margin="5 0 8 0" >
                        <Image.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding CloseWindowCommand}"/>
                        </Image.InputBindings>
                    </Image>

                    

                </StackPanel>

            </Grid>


            <!--#endregion-->


            <!-- List -->
            <ListView Name="MainListView"
                      Grid.Row="1"
                      Height="Auto"
                      MaxHeight="620"
                      Padding="5 4"
                      ItemsSource="{Binding FilesCollectionView}" d:ItemsSource="{Binding Files}"
                      VerticalAlignment="Top"                          
                      HorizontalContentAlignment="Stretch"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ItemContainerStyle="{StaticResource ItemStyle}"
                      ItemTemplate="{StaticResource ItemTemplate}"
                      Style="{StaticResource ListViewContainer}"
                      >

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" 
                                               CommandParameter="{Binding ElementName=MainListView, Path=SelectedItems}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ListView>

            <!-- Can Restore Dialog -->
            <Grid Background="{StaticResource MainGradient}"
                Height="70"
                Grid.Row="1"
                VerticalAlignment="Top"
                Visibility="{Binding CanRestorePreviousList, Converter={StaticResource BoolToVisibilityConverter}}"
                d:Visibility="Hidden">
                <local:RestoreDialog/>
            </Grid>

            <!--#region Resize Borders -->

            <Border x:Name="LeftResizeBorder"
                    Grid.RowSpan="2"
                    Margin="-6 0"
                    HorizontalAlignment="Left"
                    Style="{StaticResource SideResizeBorder}"
                    MouseLeftButtonDown="LeftResizeBorder_MouseLeftButtonDown"
                    MouseEnter="SideResizeBorder_MouseEnter"
                    MouseLeave="ResizeBorder_MouseLeave"/>

            <Border x:Name="RightResizeBorder"
                    Grid.RowSpan="2"
                    Margin="-8 0"
                    HorizontalAlignment="Right"
                    Style="{StaticResource SideResizeBorder}"
                    MouseLeftButtonDown="RightResizeBorder_MouseLeftButtonDown"
                    MouseEnter="SideResizeBorder_MouseEnter"
                    MouseLeave="ResizeBorder_MouseLeave"/>

            <Border x:Name="BottomResizeBorder"
                    Grid.RowSpan="2"
                    Margin="0 -6"
                    Style="{StaticResource BottomResizeBorder}"
                    VerticalAlignment="Bottom"
                    MouseLeftButtonDown="BottomResizeBorder_MouseLeftButtonDown"
                    MouseRightButtonDown="BottomResizeBorder_MouseRightButtonDown"
                    MouseEnter="BottomResizeBorder_MouseEnter"
                    MouseLeave="ResizeBorder_MouseLeave"
                    MouseMove="BottomResizeBorder_MouseMove"/>

            <!--#endregion-->

        </Grid>

        <!--#region Menu -->
        <Grid x:Name="MenuContrainer"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Width="Auto"
              Height="Auto"
              Margin="18"
              Visibility="{Binding IsMenuOpen, Converter={StaticResource BoolToVisibilityConverter}}" 
              d:Visibility="Visible"
              Background="{x:Null}">

            <Border x:Name="MenuBorder" 
                        BorderBrush="{StaticResource MainBorderBrush}"
                        BorderThickness="1"
                        Background="{StaticResource MainGradient}">

                <Grid x:Name="MenuLayoutGrid"
                            Background="{x:Null}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <Grid x:Name="MenuHeaderGrid"
                              Grid.Row="0"
                              Background="{StaticResource HeaderBackgroundBrush}">

                        <Image Style="{StaticResource Menu}"
                                   HorizontalAlignment="Left"
                                   Margin="6 0 0 0">
                            <Image.InputBindings>
                                <MouseBinding Gesture="LeftClick" Command="{Binding MenuCommand}"/>
                            </Image.InputBindings>
                        </Image>

                        <Image Style="{StaticResource Pin}"
                                   HorizontalAlignment="Right"
                                   Margin="0 0 6 0">
                            <Image.InputBindings>
                                <MouseBinding Gesture="LeftClick" Command="{Binding AlwaysOnTopCommand}"/>
                            </Image.InputBindings>
                        </Image>

                        <Rectangle x:Name="HeaderDivider"
                                       Height="1"
                                       VerticalAlignment="Bottom"
                                       Fill="{StaticResource HeaderBorderBrush}"/>
                    </Grid>

                    <Button x:Name="MenuOpenPreviousButton"
                                Grid.Row="1"
                                Content="Open previous..."
                                Style="{StaticResource MenuButton}" />

                    <Button x:Name="MenuConfigButton"
                                Grid.Row="2"
                                Content="Config..."
                                Style="{StaticResource MenuButton}"
                                Command="{Binding OpenConfigCommand}"/>

                    <Button x:Name="MenuAboutButton"
                                Grid.Row="3"
                                Content="About"
                                Style="{StaticResource MenuButton}" />

                </Grid>

            </Border>

        </Grid>

        <!--#endregion-->

        <!--<TextBlock Text="{Binding SelectedItemsInfo}"
                   FontFamily="{StaticResource MontserratRegular}"
                   Foreground="{StaticResource HeaderForegroundBrush}"
                   FontSize="20"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Center"
                   d:Text="123123"/>-->


    </Grid>




</Window>
