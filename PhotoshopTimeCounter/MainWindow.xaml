<Window x:Class="PhotoshopTimeCounter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:f="clr-namespace:FluentWpfChromes;assembly=FluentWpfChromes"
        xmlns:local="clr-namespace:PhotoshopTimeCounter"
        mc:Ignorable="d"
        Title="Photoshop Time Counter"  Name="window"
        Height="300" Width="300" MinWidth="200" 
        MinHeight="24" MaxWidth="600" MaxHeight="600" SizeToContent="Height"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"        
        WindowStyle="None" ResizeMode="CanResize" AllowsTransparency="True"
        Background="#bbffffff"  f:AeroGlassChrome.IsHitTestVisibleInChrome="True" 
        Topmost="{Binding AlwaysOnTop, Mode=TwoWay}">

    <Window.Resources>

        <!-- Buttons -->
        <Style x:Key="HeaderButton" TargetType="Button">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Opacity" Value="0.25"/>
            <Setter Property="Template" Value="{DynamicResource ButtonNoStyle}"/>

            <Style.Triggers>
                
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>

                <DataTrigger Binding="{Binding ElementName=window, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                
            </Style.Triggers>
            
        </Style>

        <Style x:Key="Minimize" TargetType="Button" BasedOn="{StaticResource HeaderButton}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="\Images\minimize__bottom_32.png"/>
                </Setter.Value>
            </Setter>
            
        </Style>

        <Style x:Key="AlwaysOnTop" TargetType="Button" BasedOn="{StaticResource HeaderButton}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="\Images\pin_32.png"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                
                <DataTrigger Binding="{Binding AlwaysOnTop}" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </DataTrigger>
                
            </Style.Triggers>

        </Style>

        <Style x:Key="Close" TargetType="Button" BasedOn="{StaticResource HeaderButton}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="\Images\close_32.png"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="\Images\close_32_red.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <f:AeroGlassChrome.AeroGlassChrome>
        <f:AeroGlassChrome/>
    </f:AeroGlassChrome.AeroGlassChrome>

    <Border BorderBrush="#353535" BorderThickness="1.4">
        <Grid Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->    
            
            <TextBlock Margin="0 -2" Grid.Column="1" d:Text="00:00:13" Text="{Binding SummarySeconds, Converter={StaticResource SecondsToTimeConverter}}" 
                   FontSize="22" FontFamily="{StaticResource RobotoLight}" Foreground="#252525"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>

            
            <Button x:Name="Pin"
                    Grid.Column="0" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Top"
                    Command="{Binding AlwaysOnTopCommand}"
                    Style="{StaticResource AlwaysOnTop}"/>

            <Button x:Name="MinimizeButton"
                    Grid.Column="1" Margin="2" HorizontalAlignment="Right" VerticalAlignment="Top"
                    Click="MinimizeButton_Click" 
                    Style="{StaticResource Minimize}"/>

            <Button x:Name="CloseButton"
                    Grid.Column="2" Margin="2" HorizontalAlignment="Right" VerticalAlignment="Top"
                    Click="CloseButton_Click" 
                    Style="{StaticResource Close}" />

            
            <!-- Files -->
            
            <ItemsControl Grid.Row="1" Grid.ColumnSpan="3" 
                          ItemsSource="{Binding FilesList}" Background="Transparent" BorderThickness="0">
                
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        
                        <Border Grid.ColumnSpan="2" Margin="2" Height="22" Width="auto">
                            <Border.InputBindings>
                                <MouseBinding  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                         AncestorType={x:Type Window}},
                                                         Path=DataContext.RemoveItemCommand}" CommandParameter="{Binding}" Gesture="LeftDoubleClick"/>
                            </Border.InputBindings>

                            <Border.Style>                                
                                <Style TargetType="{x:Type Border}">

                                    <Setter Property="Background" Value="#30ffffff"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#bbffffff"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- FileName -->
                                <TextBlock FontFamily="{StaticResource RobotoLight}" Grid.Column="0" Margin="8 0" 
                                   Text="{Binding FileName}" FontSize="16" VerticalAlignment="Center"/>
                                
                                <!-- Time -->
                                <TextBlock FontFamily="{StaticResource RobotoLight}" Grid.Column="2" Margin="8 0" 
                                   Text="{Binding SecondsActive, Converter={StaticResource SecondsToTimeConverter}}" FontSize="16" 
                                   HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Border>
</Window>
